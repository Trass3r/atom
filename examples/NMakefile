build\$(STEM).dll: build\$(STEM).obj build\$(STEM).def build\tmp\error_handler.obj
	$(CXX) build\tmp\error_handler.obj build\$(STEM).obj /link /NODEFAULTLIB:LIBCMT msvcrt.lib /FORCE:MULTIPLE /DLL /out:build\$(STEM).dll /def:build\$(STEM).def

build\tmp\error_handler.obj: error_handler.c
	$(CXX) /nologo /c /W3 /O2 /EHsc error_handler.c /Fo:$@

build\tmp:
	mkdir build\tmp

build\tmp\$(STEM)_fn.cpp: $(STEM).cpp NMakefile build\tmp
	copy $(STEM).cpp $@
	type $(HALIDE_PATH)\tools\GenGen.cpp >> $@

build\$(STEM).def:
	echo LIBRARY $(STEM) > $@
	echo EXPORTS >> $@
	echo	render @1 >> $@
	echo	render_metadata @2 >> $@
	echo	halide_set_error_handler @3 >> $@

build\tmp\$(STEM)_fn.obj: build\tmp\$(STEM)_fn.cpp
	$(CXX) /nologo /c /W3 /O2 /EHsc /I $(HALIDE_PATH)\include build\tmp\$(STEM)_fn.cpp /Fo:$@

build\tmp\Halide.dll: $(HALIDE_PATH)\Release\Halide.dll
	copy $(HALIDE_PATH)\Release\Halide.dll build\tmp

build\tmp\mk_$(STEM).exe: build\tmp\$(STEM)_fn.obj build\tmp\Halide.dll
	$(CXX) /nologo /EHsc /I $(HALIDE_PATH)\include /Fe:$@ $(HALIDE_PATH)\Release\Halide.lib build\tmp\$(STEM)_fn.obj

build\$(STEM).obj: build\tmp\mk_$(STEM).exe
	build\tmp\mk_$(STEM) -n $(STEM) -o build target=host -e o -g generator -f render

clean:
	del /q /s /f build
